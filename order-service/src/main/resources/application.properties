spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:1993/orderService
spring.datasource.username=root
spring.datasource.password=cl3cl3j06j06
spring.jpa.hibernate.ddl-auto=update

server.port=8081

eureka.client.service-url.defaultZone=http://eureka:password@localhost:8761/eureka
spring.application.name=order-service

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilinece4j Properties
# Register the health indicator
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
# Buffer size for event
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# It won't open the circuit breaker right the way, it would wait for some number
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
# Give the "some number"
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
# Wait 5 seconds to go into open state
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
# Three calls then open
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
# Auto open to half open
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0